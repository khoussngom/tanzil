{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = environment.apiUrl;\n    }\n    obtenirHeaders() {\n      const token = localStorage.getItem('token');\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : ''\n      });\n    }\n    // Utilisateurs\n    inscrireUtilisateur(utilisateur) {\n      return this.http.post(`${this.apiUrl}/utilisateurs/inscrire`, utilisateur);\n    }\n    connecterUtilisateur(credentials) {\n      return this.http.post(`${this.apiUrl}/utilisateurs/connecter`, credentials);\n    }\n    obtenirProfilUtilisateur(id) {\n      return this.http.get(`${this.apiUrl}/utilisateurs/profil/${id}`, {\n        headers: this.obtenirHeaders()\n      });\n    }\n    // Projets\n    listerProjets(filtres) {\n      return this.http.get(`${this.apiUrl}/projets`, {\n        params: filtres || {}\n      });\n    }\n    obtenirProjetParId(id) {\n      return this.http.get(`${this.apiUrl}/projets/${id}`);\n    }\n    // Investissements\n    creerInvestissement(investissement) {\n      return this.http.post(`${this.apiUrl}/investissements`, investissement, {\n        headers: this.obtenirHeaders()\n      });\n    }\n    obtenirHistoriqueInvestissements(utilisateurId) {\n      return this.http.get(`${this.apiUrl}/investissements/utilisateur/${utilisateurId}/historique`, {\n        headers: this.obtenirHeaders()\n      });\n    }\n    // Articles\n    listerArticles() {\n      return this.http.get(`${this.apiUrl}/articles`);\n    }\n    obtenirArticleParId(id) {\n      return this.http.get(`${this.apiUrl}/articles/${id}`);\n    }\n    // Partenaires\n    listerPartenaires() {\n      return this.http.get(`${this.apiUrl}/partenaires`);\n    }\n    static {\n      this.ɵfac = function ApiService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ApiService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ApiService,\n        factory: ApiService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ApiService;\n})();","map":{"version":3,"names":["HttpHeaders","environment","ApiService","constructor","http","apiUrl","obtenirHeaders","token","localStorage","getItem","inscrireUtilisateur","utilisateur","post","connecterUtilisateur","credentials","obtenirProfilUtilisateur","id","get","headers","listerProjets","filtres","params","obtenirProjetParId","creerInvestissement","investissement","obtenirHistoriqueInvestissements","utilisateurId","listerArticles","obtenirArticleParId","listerPartenaires","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/dialibatoul-marakhib/Programation/tanzil/frontend/src/app/services/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  private obtenirHeaders(): HttpHeaders {\n    const token = localStorage.getItem('token');\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': token ? `Bearer ${token}` : ''\n    });\n  }\n\n  // Utilisateurs\n  inscrireUtilisateur(utilisateur: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/utilisateurs/inscrire`, utilisateur);\n  }\n\n  connecterUtilisateur(credentials: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/utilisateurs/connecter`, credentials);\n  }\n\n  obtenirProfilUtilisateur(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/utilisateurs/profil/${id}`, { headers: this.obtenirHeaders() });\n  }\n\n  // Projets\n  listerProjets(filtres?: any): Observable<any> {\n    return this.http.get(`${this.apiUrl}/projets`, { params: filtres || {} });\n  }\n\n  obtenirProjetParId(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/projets/${id}`);\n  }\n\n  // Investissements\n  creerInvestissement(investissement: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/investissements`, investissement, { headers: this.obtenirHeaders() });\n  }\n\n  obtenirHistoriqueInvestissements(utilisateurId: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/investissements/utilisateur/${utilisateurId}/historique`, { headers: this.obtenirHeaders() });\n  }\n\n  // Articles\n  listerArticles(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/articles`);\n  }\n\n  obtenirArticleParId(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/articles/${id}`);\n  }\n\n  // Partenaires\n  listerPartenaires(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/partenaires`);\n  }\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,WAAaC,UAAU;EAAjB,MAAOA,UAAU;IAGrBC,YAAoBC,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;MAFhB,KAAAC,MAAM,GAAGJ,WAAW,CAACI,MAAM;IAEI;IAE/BC,cAAcA,CAAA;MACpB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,OAAO,IAAIT,WAAW,CAAC;QACrB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEO,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;OAC9C,CAAC;IACJ;IAEA;IACAG,mBAAmBA,CAACC,WAAgB;MAClC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,wBAAwB,EAAEM,WAAW,CAAC;IAC5E;IAEAE,oBAAoBA,CAACC,WAAgB;MACnC,OAAO,IAAI,CAACV,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,yBAAyB,EAAES,WAAW,CAAC;IAC7E;IAEAC,wBAAwBA,CAACC,EAAU;MACjC,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,wBAAwBW,EAAE,EAAE,EAAE;QAAEE,OAAO,EAAE,IAAI,CAACZ,cAAc;MAAE,CAAE,CAAC;IACtG;IAEA;IACAa,aAAaA,CAACC,OAAa;MACzB,OAAO,IAAI,CAAChB,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,UAAU,EAAE;QAAEgB,MAAM,EAAED,OAAO,IAAI;MAAE,CAAE,CAAC;IAC3E;IAEAE,kBAAkBA,CAACN,EAAU;MAC3B,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,YAAYW,EAAE,EAAE,CAAC;IACtD;IAEA;IACAO,mBAAmBA,CAACC,cAAmB;MACrC,OAAO,IAAI,CAACpB,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,kBAAkB,EAAEmB,cAAc,EAAE;QAAEN,OAAO,EAAE,IAAI,CAACZ,cAAc;MAAE,CAAE,CAAC;IAC7G;IAEAmB,gCAAgCA,CAACC,aAAqB;MACpD,OAAO,IAAI,CAACtB,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,gCAAgCqB,aAAa,aAAa,EAAE;QAAER,OAAO,EAAE,IAAI,CAACZ,cAAc;MAAE,CAAE,CAAC;IACpI;IAEA;IACAqB,cAAcA,CAAA;MACZ,OAAO,IAAI,CAACvB,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,WAAW,CAAC;IACjD;IAEAuB,mBAAmBA,CAACZ,EAAU;MAC5B,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,aAAaW,EAAE,EAAE,CAAC;IACvD;IAEA;IACAa,iBAAiBA,CAAA;MACf,OAAO,IAAI,CAACzB,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,cAAc,CAAC;IACpD;;;yCAxDWH,UAAU,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;MAAA;IAAA;;;eAAV/B,UAAU;QAAAgC,OAAA,EAAVhC,UAAU,CAAAiC,IAAA;QAAAC,UAAA,EAFT;MAAM;IAAA;;SAEPlC,UAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}